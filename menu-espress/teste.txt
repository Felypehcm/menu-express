          {
              return (
                  <View style={{ flexDirection: 'row' }}>
                    <View style={{ width: 120, height: 120 }}>
                      <Card.Image source={{ uri: product.image, width: 60, height: 60 }} />
                    </View>
                    <View style={{ margin: 15, width: 200, height: 120, justifyContent: 'space-between' }}>
                      <Text style={{ fontSize: 20, marginBottom: "3%", marginTop: -15, fontWeight: 'bold' }}> {product.name} </Text>
                      <Card.Divider />
                      <Text style={{ fontSize: 12, paddingBottom: 25 }}> Descrição: {product.description} </Text>
                      <Text style={{ fontSize: 16, marginEnd: "5%", marginBottom: "3%", marginTop: "2%" }}> Preço: R$ {product.price.toFixed(2)} </Text>
                      <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingRight: 10 }}>
                        <Pressable onPress={() => {
                          openToast("Item adicionado com sucesso!")
                          product.quantity += 1;
                          const existingProduct = shoppingCart.find((item: any) => item.name === product.name);
                          const emptyProduct = shoppingCart.find((item: any) => item.quantity <= 0);
                          if (!existingProduct && !emptyProduct) {
                            setShoppingCart([...shoppingCart, product])
                          }
                          if (emptyProduct) {
                            const notEmptyProducts = shoppingCart.filter((item: any) => item.quantity > 0);
                            setShoppingCart(notEmptyProducts)
                          }
                        }}
                          style={({ pressed }: any) => (
                            {
                              backgroundColor: pressed ? '#2089dc' : '#fb4e30',
                              height: 32,
                              justifyContent: 'center',
                              alignItems: 'center',
                              borderRadius: 8,
                              paddingHorizontal: 10
                            }
                          )
                          }>
                          <Text style={{ fontSize: 14, color: 'white' }}>Adicionar</Text>
                        </Pressable>
                        {favorite ?
                          <Icon onPress={() => { removeFavorite(product), setFavorite(false) }} name="heart" size={28} color="red"></Icon> :
                          <Icon onPress={() => {
                            if (favorites) {
                              setFavorites([...favorites, product])
                            } else {
                              setFavorites([product])
                            }
                            setFavorite(true)
                          }} name="hearto" size={28}></Icon>
                        }
                      </View>
                    </View>
                  </View>
              )
            })
          }